{"ast":null,"code":"var _jsxFileName = \"/home/skillup_student/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/lysenko/blog_app/src/components/App.js\";\nimport React from 'react'; //import Footer from './Footer';\n//import Header from './Header';\n\nconst names = ['vasa', 'pitya', 'alex', 'rudik', 'valera'];\nconst render = names.map((name, i) => React.createElement(\"p\", {\n  key: i,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, \" \", name)); //const namesSort = names.filter(name => name !== 'pitya');\n//console.log(namesSort)\n//const renderNames = namesSort.map((name, i) => <p key={i}>{name}</p> );\n\n/*const  MyNames = [];\nfor (let i in names)\nconst name = names[i];\nif (name !== 'pitya') <p key={i}>{name}</p>*/\n\n/*const render = names.reduce((ak, name, i) => {\n//console.log(name)\n//}, []);\nif (name !== 'rudik') {\n  ak.push(<p key={i}>{name}</p>)\n  return ak;\n  }\nreturn ak;\n}, []);\n\n//console.log(render);*/\n//const renderNamesInner = names.map(name  => `<li>${name}</li>`);\n//console.log(renderNamesInner.join(''))\n//console.log(renderNamesInner)\n\nfunction App() {\n  const res = 'hello';\n\n  const show = () => {\n    // alert('hello my frend!')\n    res += ' world';\n  };\n\n  return React.createElement(\"div\", {\n    id: \"app\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    onClick: show,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Hello app\"), res);\n}\n\nexport default App;","map":{"version":3,"sources":["/home/skillup_student/Рабочий стол/lysenko/blog_app/src/components/App.js"],"names":["React","names","render","map","name","i","App","res","show"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;;AAEA,MAAMC,KAAK,GAAG,CAAC,MAAD,EAAS,OAAT,EAAkB,MAAlB,EAA0B,OAA1B,EAAmC,QAAnC,CAAd;AAEA,MAAMC,MAAM,GAAGD,KAAK,CAACE,GAAN,CAAU,CAACC,IAAD,EAAOC,CAAP,KAAa;AAAG,EAAA,GAAG,EAAEA,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAaD,IAAb,CAAvB,CAAf,C,CACA;AACA;AAEA;;AAEA;;;;;AAKA;;;;;;;;;;;AAaA;AACA;AACA;;AAEA,SAASE,GAAT,GAAe;AACb,QAAMC,GAAG,GAAG,OAAZ;;AAEA,QAAMC,IAAI,GAAG,MAAM;AAClB;AACDD,IAAAA,GAAG,IAAI,QAAP;AAAgB,GAFhB;;AAGA,SACE;AAAK,IAAA,EAAE,EAAC,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,OAAO,EAAIC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEGD,GAFH,CADF;AAMD;;AAED,eAAeD,GAAf","sourcesContent":["import React from 'react';\n//import Footer from './Footer';\n//import Header from './Header';\n\nconst names = ['vasa', 'pitya', 'alex', 'rudik', 'valera'];\n\nconst render = names.map((name, i) => <p key={i}> {name}</p>)\n//const namesSort = names.filter(name => name !== 'pitya');\n//console.log(namesSort)\n\n//const renderNames = namesSort.map((name, i) => <p key={i}>{name}</p> );\n\n/*const  MyNames = [];\nfor (let i in names)\nconst name = names[i];\nif (name !== 'pitya') <p key={i}>{name}</p>*/\n\n/*const render = names.reduce((ak, name, i) => {\n//console.log(name)\n//}, []);\nif (name !== 'rudik') {\n  ak.push(<p key={i}>{name}</p>)\n  return ak;\n  }\nreturn ak;\n}, []);\n\n//console.log(render);*/\n\n\n//const renderNamesInner = names.map(name  => `<li>${name}</li>`);\n//console.log(renderNamesInner.join(''))\n//console.log(renderNamesInner)\n\nfunction App() {\n  const res = 'hello';\n\n  const show = () => {\n   // alert('hello my frend!')\n  res += ' world'}\n  return (\n    <div id='app'>\n      <h2 onClick = {show}>Hello app</h2>\n      {res}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}